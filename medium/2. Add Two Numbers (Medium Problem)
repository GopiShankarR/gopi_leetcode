# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        head = l1
        l1Count = 0
        l2Count = 0
        l1arr, l2arr, result = [], [], []
        sumNum = 0
        while l1 is not None:
            l1Count += 1
            l1arr.append(l1.val)
            l1 = l1.next
        while l2 is not None:
            l2Count += 1
            l2arr.append(l2.val)
            l2 = l2.next
        l1Num = int(''.join(map(str, l1arr[::-1])))
        l2Num = int(''.join(map(str, l2arr[::-1])))
        sumNum = l1Num + l2Num
        while sumNum > 0:
            result.append(sumNum % 10)
            sumNum //= 10
        if not result:
            return ListNode(0)
        newHead = ListNode(result[0])
        curr = newHead
        for val in result[1:]:
            curr.next = ListNode(val)
            curr = curr.next
        return newHead

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        curr = head
        count = 0
        while curr is not None:
            count += 1
            curr = curr.next
        curr = head
        toDelete = count - n
        if toDelete == 0:
            return head.next
        for i in range(toDelete - 1):
            curr = curr.next
        if curr.next is not None:
            curr.next = curr.next.next
        return head

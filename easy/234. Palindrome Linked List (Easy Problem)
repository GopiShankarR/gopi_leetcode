/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        vector<int> temp;
        ListNode* slow = head;
        ListNode* fast = head;
        while(slow && fast && fast -> next != NULL) {
            temp.push_back(slow -> val);
            slow = slow -> next;
            fast = fast -> next -> next;
        }

        if(fast) {
            slow = slow -> next;
        }
        for (int i = temp.size() - 1; i >= 0; --i) {
            if (slow->val != temp[i]) return false;
            slow = slow->next;
        }
        return true;
    }
};
